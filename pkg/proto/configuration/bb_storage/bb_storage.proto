syntax = "proto3";

package buildbarn.configuration.bb_storage;

import "pkg/proto/configuration/blobstore/blobstore.proto";
import "pkg/proto/configuration/grpc/grpc.proto";

option go_package = "github.com/buildbarn/bb-storage/pkg/proto/configuration/bb_storage";

message JaegerConfiguration {
  // Jaeger agent endpoint.
  string agent_endpoint = 1;

  // Jaeger collector endpoint.
  string collector_endpoint = 2;

  // OpenTracing service name.
  string service_name = 3;

  // Whether or not all traces should be sampled.
  bool always_sample = 4;
}

message ApplicationConfiguration {
  // Blobstore configuration for the bb-storage instance.
  buildbarn.configuration.blobstore.BlobstoreConfiguration blobstore = 1;

  // Jaeger configuration for tracing.
  JaegerConfiguration jaeger = 2;

  // Address on which to listen to expose Prometheus metrics.
  string http_listen_address = 3;

  // gRPC servers to spawn to listen for requests from clients.
  repeated buildbarn.configuration.grpc.GRPCServerConfiguration grpc_servers =
      4;

  // List of schedulers available capable of building, mapping name to
  // endpoints.
  map<string, buildbarn.configuration.grpc.GRPCClientConfiguration> schedulers =
      5;

  // List of instances which can upload to the Action Cache.
  repeated string allow_ac_updates_for_instances = 6;

  // Only return ActionResult messages for which all output files are
  // present in the Content Addressable Storage.
  bool verify_action_result_completeness = 7;

  // Maximum Protobuf message size to unmarshal.
  int64 maximum_message_size_bytes = 8;
}
